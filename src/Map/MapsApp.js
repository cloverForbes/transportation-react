import  React from 'react';import  Map from './Map';import Table from '../Table/Table'import Filter from '../Filter/Filter'import {Grid, Row, Col} from 'react-bootstrap'import {rename, filterData} from '../Helpers'const headers = [    {        name: "location_name",        filter: "search"    },    {        name: "operation_state",        opts: {'2': 'Flash', '3': 'Comms Outage', '4': 'Unknown'},        display: 'icon',        filter: "toggle"    },    {        name: "operation_state_datetime",        format: "date"    },    {        name: "todo: math",        format: "timeH"    }];export default class MapsApp extends React.Component{    constructor(props){        super(props);        this.state = {            position: [30.3, -97.7],            markers: [],            filters:[],            data: []        }    }    getPosition = position => {        this.setState({            position: position        })    }    pullData = (data, key) => {        let tmpFilters = this.state.filters;        tmpFilters[key] = data;        this.setState({            filters: tmpFilters        })    }    componentWillMount(){        if(this.props.url){            let headers = new Headers();            let myInit = {                method: 'GET',                headers: headers,                mode: 'cors',                cache: 'default'            };            fetch(this.props.url, myInit).then(function (res) {                return res;            }).then((resp) => {                return resp.json();            }).then(data => {                this.setState({                    data: data                })            })        }    }    render(){        return (            <Grid fluid={true}>                <Row>                    {headers.map((header, key) => {                        if(header.filter){                            return <Col style={{width: "25%"}} key={key}><Filter myKey={key} pullData={this.pullData} name={header.name} type={header.filter} opts={header.opts ? header.opts : ''} label={rename(header.name)} key={key}/></Col>                        }})}                </Row>                <Row>                    <Col lg={12}>                        <Table data={filterData(this.state.data, this.state.filters)}  filter={this.state.filters} getPosition={this.getPosition} headers={headers}/>                    </Col>                </Row>                <Map  markers={filterData(this.state.data, this.state.filters)} center={this.state.position}/>            </Grid>        );    }}