import  React from 'react';import  Map from './Map';import Table from '../Table/Table'import Filter from '../Filter/Filter'import {Grid, Row, Col} from 'react-bootstrap'import {rename, filterData, getData, getMarkersFromGroup} from '../Helpers'import _ from 'lodash';export default class MapsApp extends React.Component{    constructor(props){        super(props);        this.state = {            position: [30.3, -97.7],            markers: [],            marker: '',            filters:[],            data: [],            opts: this.props.config.headers.map(item => {                return item.opts ? {name: item.name, opts: item.opts} : null            })        }    }    getPosition = position => {        if(!this.props.config.fromGroup){            let newPosition = [];            newPosition.push(Number(position.location_latitude));            newPosition.push(Number(position.location_longitude));            this.setState({                position: newPosition,                marker: position            })        }        else{            let id = this.props.config.fromGroup.id;            let url = this.props.config.fromGroup.url;            getMarkersFromGroup([position], url, id, this);        }    }    pullData = (data, key) => {        let tmpFilters = this.state.filters;        tmpFilters[key] = data;        this.setState({            filters: tmpFilters        })    }    componentWillMount(){        if(this.props.config.url){            getData(this.props.config.url, this);        }    }    render(){        let data = filterData(this.state.data, this.state.filters);        if(this.props.config.uniqBy){            data = _.uniqBy(data, this.props.config.uniqBy)        }        return (            <Grid fluid={true}>                <Row>                    {this.props.config.headers.map((header, key) => {                        if(header.filter){                            return <Col style={{width: "12.5%"}} key={key}><Filter myKey={key} pullData={this.pullData} name={header.name} type={header.filter} opts={header.opts ? header.opts : ''} display={header.opts ? header.display_opts : ''}label={rename(header.alt)} key={key}/></Col>                        }else {                            return ''                        }                    })}                </Row>                <Row>                    <Col md={6}>                        <Table fromGroup={this.props.config.fromGroup ? this.props.config.fromGroup : null} data={data}  filter={this.state.filters} getPosition={this.getPosition} headers={this.props.config.headers}/>                    </Col>                    <Col md={6}>                        <Map id={this.state.id ? this.state.id : -1} bounds={this.state.bounds} fromGroup={this.props.config.fromGroup ? this.props.config.fromGroup : null} marker_type={this.props.config.marker_type} color={this.props.config.headers[this.props.config.color]} match={this.props.config.id_match} headers={this.props.config.headers} marker={this.state.marker}  markers={data} center={this.state.position}/>                    </Col>                </Row>            </Grid>        );    }}